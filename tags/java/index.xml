<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Denny&#39;s Blog</title>
    <link>https://cdfq152313.github.io/tags/java/index.xml</link>
    <description>Recent content in Java on Denny&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="https://cdfq152313.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Java (Android) AES</title>
      <link>https://cdfq152313.github.io/post/2017-02-22/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cdfq152313.github.io/post/2017-02-22/</guid>
      <description>

&lt;h1 id=&#34;平台&#34;&gt;平台&lt;/h1&gt;

&lt;p&gt;Android Studio
- compileSdkVersion 25
- buildToolsVersion &amp;ldquo;25.0.1&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;全域變數&#34;&gt;全域變數&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;SecretKey secretKey; // 金鑰
AlgorithmParameterSpec mAlgorithmParameterSpec; // 之後要放置初始化向量的參數
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;初始化&#34;&gt;初始化&lt;/h1&gt;

&lt;h2 id=&#34;金鑰初始化&#34;&gt;金鑰初始化&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private void genAESKey() throws Exception {
  KeyGenerator keyGen = KeyGenerator.getInstance(&amp;quot;AES&amp;quot;); // 指定AES演算法
  keyGen.init(256, new SecureRandom()); // 指定256位元，並使用SecureRandom
  secretKey = keyGen.generateKey(); // 產生AES金鑰
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;初始向量初始化&#34;&gt;初始向量初始化&lt;/h2&gt;

&lt;p&gt;private void genInitializationVector() throws NoSuchPaddingException, NoSuchAlgorithmException {
  cipher = Cipher.getInstance(&amp;ldquo;AES/CBC/PKCS5Padding&amp;rdquo;); // 指定AES演算法
  byte [] iVAES = new byte[ cipher.getBlockSize() ]; // new AES演算法所需的block size
  SecureRandom random = new SecureRandom();
  random.nextBytes(iVAES); // 填充向量
  mAlgorithmParameterSpec = new IvParameterSpec(iVAES); // 向量初始化
}&lt;/p&gt;

&lt;h1 id=&#34;將字串加密&#34;&gt;將字串加密&lt;/h1&gt;

&lt;p&gt;在AES加密完之後，用Base64把結果轉成可讀的字串以便以http傳送。
不做Base64亦可，只是到時候要以byte為單位做傳送。
初始化模式為 ENCRYPT_MODE&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private String encrypt(String content) throws Exception {
    cipher = Cipher.getInstance(&amp;quot;AES/CBC/PKCS5Padding&amp;quot;);
    cipher.init(Cipher.ENCRYPT_MODE, secretKey, mAlgorithmParameterSpec);
    byte [] encrypt = cipher.doFinal(contentB64);
  return Base64.encodeToString(encrypt, Base64.DEFAULT);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;將字串解密&#34;&gt;將字串解密&lt;/h1&gt;

&lt;p&gt;初始化模式為 DECRYPT_MODE&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private String decrypt(String content) throws Exception{
  cipher = Cipher.getInstance(&amp;quot;AES/CBC/PKCS5Padding&amp;quot;);
  cipher.init(Cipher.DECRYPT_MODE, secretKey, mAlgorithmParameterSpec);
  byte [] temp = Base64.decode(content, Base64.DEFAULT); // 將字串還原為bytes
  byte [] decodeBytes = cipher.doFinal(temp); // 解密
  return new String(decodeBytes); // 編回字串
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;匯出金鑰&#34;&gt;匯出金鑰&lt;/h1&gt;

&lt;p&gt;SecretKey使用getEncoded()可以獲得金鑰，為byte形式，若要方便閱讀與傳送可以轉換為Base64
初始化向量本身有getIV()這個method可以使用，一樣為byte形式，可轉換為Base64。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private void export(){
  String secretKeyB64 = Base64.encodeToString(secretKey.getEncoded(), Base64.DEFAULT);
  IvParameterSpec iv = (IvParameterSpec) mAlgorithmParameterSpec;
  String vectorB64 = Base64.encodeToString(iv.getIV(), Base64.DEFAULT);

  Log.i(&amp;quot;Secret Key Base64&amp;quot;, secretKeyB64);
  Log.i(&amp;quot;Vector Base64&amp;quot;, vectorB64);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Java RSA</title>
      <link>https://cdfq152313.github.io/post/2016-12-01/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cdfq152313.github.io/post/2016-12-01/</guid>
      <description>

&lt;h1 id=&#34;讀金鑰&#34;&gt;讀金鑰&lt;/h1&gt;

&lt;p&gt;感謝大大無私分享，大大一生平安
&lt;a href=&#34;http://stackoverflow.com/questions/11410770/load-rsa-public-key-from-file&#34;&gt;http://stackoverflow.com/questions/11410770/load-rsa-public-key-from-file&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;加密&#34;&gt;加密&lt;/h1&gt;

&lt;p&gt;感謝大大無私分享，大大一生平安
&lt;a href=&#34;http://jimwayne.blogspot.tw/2012/06/java_25.html&#34;&gt;http://jimwayne.blogspot.tw/2012/06/java_25.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>